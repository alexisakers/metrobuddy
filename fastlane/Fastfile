default_platform(:ios)

platform :ios do
  desc "Generates screenshots and uploads them to the App Store"
  lane :screenshots do
    capture_screenshots
    frame_screenshots
    upload_to_app_store(
      skip_binary_upload: true,
      skip_metadata: true,
      skip_app_version_update: true
    )
  end

  desc "Prepare the GitHub Actions environment for a release build"
  lane :prepare_release_ci do
    setup_ci
    sh("git config --global credential.helper osxkeychain", log: false)

    credentials = "protocol=https\nhost=github.com\nusername=#{ENV["BOT_USERNAME"]}\npassword=#{ENV["BOT_TOKEN"]}"
    sh("echo '#{credentials}' | git credential-osxkeychain store", log: false)
    update_certs
  end

  desc "Runs tests"
  lane :test do
    run_tests(scheme: "MetroBuddy")
  end

  desc "Push a new release build to the App Store"
  lane :release do
    build_number = (latest_testflight_build_number + 1).to_s
    set_xcconfig_value(
        path: "Configs/Base.xcconfig",
        name: "CURRENT_PROJECT_VERSION",
        value: build_number
    )

    build_app(scheme: "MetroBuddy", include_bitcode: false)
    upload_to_app_store(
        skip_metadata: true,
        force: true
    )

    git_commit(path: "./Configs/Base.xcconfig", message: "Version Bump")
    sh("git push")
  end

  desc "Updates the certificates and provisioning profiles in the match repo"
  lane :update_certs do
    app_identifiers = [
      "dev.alexisonline.MetroBuddy.App",
      "dev.alexisonline.MetroBuddy.App.MetroIntents",
      "dev.alexisonline.MetroBuddy.App.MetroIntentsUI",
      "dev.alexisonline.MetroBuddy.App.MetroWidget"
    ]

    match(app_identifier: app_identifiers, type: "development")
    match(app_identifier: app_identifiers, type: "appstore")
  end
end
